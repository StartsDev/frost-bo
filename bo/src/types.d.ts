/* eslint-disable @typescript-eslint/no-explicit-any */
export type Client = {
    id: string
    address: string
    businessName: string
    city: string
    contact: string
    email: string
    nit: string
    phone: string
    headquarters: Headquarter[]
    locations: Location[]
    equipments: Equipment[]
    user_app: UserApp
}

export type ClientResponse = {
    clients: Client[]
}

export type Equipment = {
    id: string
    name: string
    description: string
    serial: string
    image: string
    model: string
    type: string
    brand: string
    locationId: string
    location: {
        id: string
        locationName: string
    }
    headquarter: {
        id: string
        headName: string
    }
    client: {
        id: string
        businessName: string
        user_app: UserApp[]
    }
}

export type Headquarter = {
    id: string
    address: string
    headName: string
    email: string
    phone: string
    isPrincipal: boolean
    clientId: string
    status: string
    Client: ClientRes
    locations: Location[]
}

export type Location = {
    id: string
    registro: number
    locationName: string
    headquarterId: string
    description: string
    headquarter: HeadquarterRes
    client: ClientRes
    equipments: Equipment[]
    // headquarter?: Omit<Headquarter, "isPrincipal" | "address" | "email" | "phone">
    // client?: Omit<Client, "nit" | "address" | "email" | "phone" | "city" | "contact"> & UserApp
}

export type UserApp = {
    user_id: string
    role_id: string
    role_name: string
}

// export type MainResponse = {
//     maintenance: Maintenance
//     succes: boolean
// }

// export type Maintenance = {
//     id: string
//     activities: string,
//     voltage_on_L1L2: number,
//     voltage_on_L1L3: number,
//     voltage_on_L2L3: number,
//     voltage_control: number,
//     suction_pressure: number,
//     amp_engine_1: number,
//     amp_engine_2: number,
//     amp_engine_3: number,
//     amp_engine_4: number,
//     amp_engine_evap: number,
//     compressor_1_amp_L1: number,
//     compressor_1_amp_L2: number,
//     compressor_1_amp_L3: number,
//     compressor_2_amp_L1: number,
//     compressor_2_amp_L2: number,
//     compressor_2_amp_L3: number,
//     supply_temp: number,
//     return_temp: number,
//     water_in_temp: number,
//     water_out_temp: number,
//     sprinkler_state: number,
//     float_state: number,
//     discharge_pressure: number,
//     service_hour: string,
//     service_date: string,
//     customer_sign: any,
//     tech_sign: any,
//     photos: string[],
//     tech?: any,
//     customerId: string,
//     observations: string,
//     additional_remarks: any,
//     status: string,
//     equipmentId: string
//     equipment?: any
//     location?: any
//     headquarter?: any
//     client?: any
// }

export type userResponse = {
    users: User[],
    numItmes: number
}

export type User = {
    id: string,
    numIdent: string,
    firstName: string,
    lastName: string,
    userName: string,
    image: string,
    email: string,
    phone: string,
    status: boolean,
    clientId: any,
    roleId: string,
    identId: string,
    Identification: {
        name: string
    }
    Role: {
        role: string
    }
}

export type Session = {
    msg: string
    token: string
    user: User
    success: boolean
}

export type Roles = {
    roles: Role[],
    success: boolean
}

export type Role = {
    role: string,
    id: string
}
export type IdentificationResponse = {
    identifications: IndentificationType[],
    success: boolean
}

export type IndentificationType = {
    name: string,
    id: string
}


// Generated by https://quicktype.io

export interface MaintResponse {
    maintenance: Maintenance;
    succes: boolean;
}

export interface Maintenance {
    id: number;
    activities: string;
    voltage_on_L1L2: number;
    voltage_on_L1L3: number;
    voltage_on_L2L3: number;
    voltage_control: number;
    suction_pressure: number;
    amp_engine_1: number;
    amp_engine_2: number;
    amp_engine_3: number;
    amp_engine_4: number;
    amp_engine_evap: number;
    compressor_1_amp_L1: number;
    compressor_1_amp_L2: number;
    compressor_1_amp_L3: number;
    compressor_2_amp_L1: number;
    compressor_2_amp_L2: number;
    compressor_2_amp_L3: number;
    supply_temp: number;
    return_temp: number;
    water_in_temp: number;
    water_out_temp: number;
    sprinkler_state: number;
    float_state: number;
    discharge_pressure: number;
    service_hour: string;
    service_date: string;
    customer_sign: null;
    tech_sign: string;
    photos: any[];
    tech: TechRes;
    customerId: string;
    observations: null;
    additional_remarks: null;
    status: string;
    delete: boolean;
    equipmentId: string;
    location: LocationRes;
    headquarter: HeadquarterRes;
    equipment: EquipmentRes;
    client: ClientRes;
}

export interface EquipmentRes {
    name: string;
    description: string;
    serial: string;
    image: string;
    model: string;
    type: string;
    brand: string;
    locationId: string;
    Location: LocationRes;
}

export interface LocationRes {
    locationName: string;
    description: string;
    headquarterId: string;
    Headquarter: HeadquarterRes;
}

export interface HeadquarterRes {
    headName: string;
    address: string;
    email: string;
    phone: string;
    isPrincipal: boolean;
    clientId: string;
    Client: ClientRes;
}

export interface ClientRes {
    businessName: string;
    nit: string;
    address: string;
    email: string;
    phone: string;
    city: string;
    contact: string;
    user_app: UserAppRes[];
}

export interface UserAppRes {
    user_id: string;
    role_id: string;
    role_name: string;
}

export interface TechRes {
    techId: string;
    techName: string;
    techNumId: string;
}


export interface HeadRes {
    techId:    string;
    techName:  string;
    techNumId: string;
}

export interface EquiomentPayload {
    id?:             string
    name:        string;
    description: string;
    serial:      string;
    image?:       string;
    model:       string;
    type:        string;
    brand:       string;
    locationId:  string;

}
